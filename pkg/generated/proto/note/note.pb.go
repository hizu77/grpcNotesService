// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: note.proto

package note

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Note struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          string                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Note) Reset() {
	*x = Note{}
	mi := &file_note_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_note_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_note_proto_rawDescGZIP(), []int{0}
}

func (x *Note) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type CreateNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Note          *Note                  `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNoteRequest) Reset() {
	*x = CreateNoteRequest{}
	mi := &file_note_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoteRequest) ProtoMessage() {}

func (x *CreateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_note_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoteRequest.ProtoReflect.Descriptor instead.
func (*CreateNoteRequest) Descriptor() ([]byte, []int) {
	return file_note_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNoteRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateNoteRequest) GetNote() *Note {
	if x != nil {
		return x.Note
	}
	return nil
}

type CreateNoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NoteId        int64                  `protobuf:"varint,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNoteResponse) Reset() {
	*x = CreateNoteResponse{}
	mi := &file_note_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoteResponse) ProtoMessage() {}

func (x *CreateNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_note_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoteResponse.ProtoReflect.Descriptor instead.
func (*CreateNoteResponse) Descriptor() ([]byte, []int) {
	return file_note_proto_rawDescGZIP(), []int{2}
}

func (x *CreateNoteResponse) GetNoteId() int64 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

type GetNoteByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NoteId        int64                  `protobuf:"varint,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNoteByIdRequest) Reset() {
	*x = GetNoteByIdRequest{}
	mi := &file_note_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoteByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoteByIdRequest) ProtoMessage() {}

func (x *GetNoteByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_note_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoteByIdRequest.ProtoReflect.Descriptor instead.
func (*GetNoteByIdRequest) Descriptor() ([]byte, []int) {
	return file_note_proto_rawDescGZIP(), []int{3}
}

func (x *GetNoteByIdRequest) GetNoteId() int64 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

type GetNoteByIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Note          *Note                  `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNoteByIdResponse) Reset() {
	*x = GetNoteByIdResponse{}
	mi := &file_note_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoteByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoteByIdResponse) ProtoMessage() {}

func (x *GetNoteByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_note_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoteByIdResponse.ProtoReflect.Descriptor instead.
func (*GetNoteByIdResponse) Descriptor() ([]byte, []int) {
	return file_note_proto_rawDescGZIP(), []int{4}
}

func (x *GetNoteByIdResponse) GetNote() *Note {
	if x != nil {
		return x.Note
	}
	return nil
}

var File_note_proto protoreflect.FileDescriptor

const file_note_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"note.proto\x12\x04note\"\x1a\n" +
	"\x04Note\x12\x12\n" +
	"\x04data\x18\x01 \x01(\tR\x04data\"L\n" +
	"\x11CreateNoteRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1e\n" +
	"\x04note\x18\x02 \x01(\v2\n" +
	".note.NoteR\x04note\"-\n" +
	"\x12CreateNoteResponse\x12\x17\n" +
	"\anote_id\x18\x01 \x01(\x03R\x06noteId\"-\n" +
	"\x12GetNoteByIdRequest\x12\x17\n" +
	"\anote_id\x18\x01 \x01(\x03R\x06noteId\"5\n" +
	"\x13GetNoteByIdResponse\x12\x1e\n" +
	"\x04note\x18\x01 \x01(\v2\n" +
	".note.NoteR\x04note2\x96\x01\n" +
	"\vNoteManager\x12A\n" +
	"\n" +
	"CreateNote\x12\x17.note.CreateNoteRequest\x1a\x18.note.CreateNoteResponse\"\x00\x12D\n" +
	"\vGetNoteById\x12\x18.note.GetNoteByIdRequest\x1a\x19.note.GetNoteByIdResponse\"\x00B\aZ\x05/noteb\x06proto3"

var (
	file_note_proto_rawDescOnce sync.Once
	file_note_proto_rawDescData []byte
)

func file_note_proto_rawDescGZIP() []byte {
	file_note_proto_rawDescOnce.Do(func() {
		file_note_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_note_proto_rawDesc), len(file_note_proto_rawDesc)))
	})
	return file_note_proto_rawDescData
}

var file_note_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_note_proto_goTypes = []any{
	(*Note)(nil),                // 0: note.Note
	(*CreateNoteRequest)(nil),   // 1: note.CreateNoteRequest
	(*CreateNoteResponse)(nil),  // 2: note.CreateNoteResponse
	(*GetNoteByIdRequest)(nil),  // 3: note.GetNoteByIdRequest
	(*GetNoteByIdResponse)(nil), // 4: note.GetNoteByIdResponse
}
var file_note_proto_depIdxs = []int32{
	0, // 0: note.CreateNoteRequest.note:type_name -> note.Note
	0, // 1: note.GetNoteByIdResponse.note:type_name -> note.Note
	1, // 2: note.NoteManager.CreateNote:input_type -> note.CreateNoteRequest
	3, // 3: note.NoteManager.GetNoteById:input_type -> note.GetNoteByIdRequest
	2, // 4: note.NoteManager.CreateNote:output_type -> note.CreateNoteResponse
	4, // 5: note.NoteManager.GetNoteById:output_type -> note.GetNoteByIdResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_note_proto_init() }
func file_note_proto_init() {
	if File_note_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_note_proto_rawDesc), len(file_note_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_note_proto_goTypes,
		DependencyIndexes: file_note_proto_depIdxs,
		MessageInfos:      file_note_proto_msgTypes,
	}.Build()
	File_note_proto = out.File
	file_note_proto_goTypes = nil
	file_note_proto_depIdxs = nil
}
